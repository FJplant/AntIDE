/*
 * $Header: /AntIDE/source/ant/runner/ServletPathPanel.java 4     99-05-25 4:49p Itree $
 * Ant ( JDK wrapper Java IDE )
 * Version 1.0
 * Copyright (c) 1998-1999 Antsoft Co. All rights reserved.
 *  This program and source file is protected by Korea and international
 * Copyright laws.
 *
 * $Revision: 4 $
 * Author:       Lee Chul Mok
 * $History: ServletPathPanel.java $
 * 
 * *****************  Version 4  *****************
 * User: Itree        Date: 99-05-25   Time: 4:49p
 * Updated in $/AntIDE/source/ant/runner
*/
package com.antsoft.ant.runner;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.event.*;
import java.io.*;

import com.antsoft.ant.util.BorderList;
import com.antsoft.ant.util.FontList;
import com.antsoft.ant.util.ExtensionFileFilter;

/**
 * Servlet Path Panel
 *
 * @autoor Lee Chul Mok
 */

public class ServletPathPanel extends JPanel {
  private JCheckBox batchCbx;
  private JTextField runnerPath;
  private JButton runnerBtn;

  private JFrame parent;

  public ServletPathPanel(JFrame parent) {
    this.parent = parent;
    try {
      jbInit();
    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }

  void jbInit() throws Exception {


    setLayout(new BorderLayout());
    setBorder(BorderList.etchedBorder5);

    ActionListener al = new ActionHandler();

    // servlet runner panel
    JLabel runnerLbl = new JLabel("Servlet Runner Path", JLabel.LEFT);
    runnerLbl.setForeground(Color.black);
    JPanel runnerP = new JPanel(new BorderLayout());
    runnerP.add(runnerLbl, BorderLayout.WEST);

    runnerLbl.setHorizontalAlignment(SwingConstants.LEFT);
    runnerPath = new JTextField(20);
    runnerBtn = new JButton(" Browser ");
    runnerBtn.setActionCommand("PATH");
    runnerBtn.addActionListener(al);

    JPanel runnerPathP = new JPanel(new BorderLayout());
    runnerPathP.add(runnerPath, BorderLayout.CENTER);
    runnerPathP.add(runnerBtn, BorderLayout.EAST);
    runnerPathP.setBorder(BorderList.lightLoweredBorder);

    // empty....
    JPanel emptyP1 = new JPanel();
    emptyP1.setPreferredSize(new Dimension(200,35));

    // for making batch file option with checkbox
    ChangeListener cl = new ChangeEventHandler();

    JLabel batchLbl = new JLabel(" :     Make batch file for RUN without Ant");
    batchLbl.setForeground(Color.black);
    batchCbx = new JCheckBox("Make");
    batchCbx.addChangeListener(cl);

    JPanel batchP = new JPanel(new FlowLayout(FlowLayout.LEFT));
    batchP.add(batchCbx);
    batchP.add(batchLbl);

    JPanel emptyP2 = new JPanel();
    emptyP2.setPreferredSize(new Dimension(200,200));


    Box box = Box.createVerticalBox();
    box.add(runnerP);
    box.add(runnerPathP);
    box.add(emptyP1);
    box.add(batchP);
    box.add(emptyP2);


    add(box,BorderLayout.CENTER);
    add(new JPanel(), BorderLayout.WEST);
    add(new JPanel(), BorderLayout.EAST);
    add(new JPanel(), BorderLayout.NORTH);
    add(new JPanel(), BorderLayout.SOUTH);
  }

  /**
   * source root select button handler
   */
  public void pathBtnSelected(){

    ExtensionFileFilter filter = new ExtensionFileFilter();
    filter.addExtension("exe");
    filter.addExtension("bat");

    JFileChooser filechooser = new JFileChooser();
    filechooser.setFileFilter(filter);
    filechooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    filechooser.setMultiSelectionEnabled(false);
    filechooser.setPreferredSize(new Dimension(400, 300));
    filechooser.setApproveButtonText("Select");
    filechooser.setApproveButtonToolTipText("Select Servletrunner Program");
    filechooser.setBorder(BorderList.lightLoweredBorder);
    filechooser.setDialogTitle("Servletrunner (ex:servletrunner.exe)");

    if(filechooser.showOpenDialog(parent) == JFileChooser.APPROVE_OPTION) {
      File f = filechooser.getSelectedFile();
      runnerPath.setText(f.getAbsolutePath());
    }
  }

  class ActionHandler implements ActionListener{
    public void actionPerformed(ActionEvent e){
      String cmd = e.getActionCommand();

      if(cmd.equals("PATH")){
        pathBtnSelected();
      }
    }
  }


  class ChangeEventHandler implements ChangeListener {
    public void stateChanged(ChangeEvent e) {

    }
  }
}
